
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_jops_examples/chapter_2/plot_motpol1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_jops_examples_chapter_2_plot_motpol1.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_jops_examples_chapter_2_plot_motpol1.py:


Polynomial fits with differing support (Motorcycle data)
========================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-54



.. image-sg:: /auto_jops_examples/chapter_2/images/sphx_glr_plot_motpol1_001.png
   :alt: Polynomial fits to motor cycle helmet data
   :srcset: /auto_jops_examples/chapter_2/images/sphx_glr_plot_motpol1_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    import pandas as pd

    from sklearn.linear_model import LinearRegression
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import PolynomialFeatures

    # Get the data
    data = pd.read_csv("../data/mcycle.csv").dropna()
    times = data["times"].to_numpy()
    accel = data["accel"].to_numpy()


    def make_grid(x, n=100):
        return np.linspace(np.min(x), np.max(x), n)


    # Fit based on all data
    new_times = make_grid(times)
    lm = make_pipeline(PolynomialFeatures(9), LinearRegression())
    lm.fit(times.reshape(-1, 1), accel)
    new_accel = lm.predict(new_times.reshape(-1, 1))


    # Fit based on data where time is greater than 5ms
    mask = times > 5
    times_subset = times[mask]
    accel_subset = accel[mask]
    new_times_subset = make_grid(times_subset)
    lm = make_pipeline(PolynomialFeatures(9), LinearRegression())
    lm.fit(times_subset.reshape(-1, 1), accel_subset)
    new_accel_subset = lm.predict(new_times_subset.reshape(-1, 1))


    # Build the graph
    plt.figure(figsize=(6, 4), dpi=300)
    plt.scatter(times, accel, color="#000000", s=2)
    plt.plot(new_times, new_accel, color="b")
    plt.plot(new_times_subset, new_accel_subset, color="r", linestyle="dashed")

    plt.title("Polynomial fits to motor cycle helmet data")
    plt.xlabel("Times (ms)")
    plt.ylabel("Acceleration (g)")
    plt.grid(linestyle="-", color="#EEEEEE", zorder=0)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.656 seconds)


.. _sphx_glr_download_auto_jops_examples_chapter_2_plot_motpol1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_motpol1.ipynb <plot_motpol1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_motpol1.py <plot_motpol1.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
